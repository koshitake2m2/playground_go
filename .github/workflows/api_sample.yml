# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: api_sample

on:
  # pull_request:
  #   branches: ["main"]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Build
        run: |
          pwd
          cd api_sample/cmd/api
          go build -v ./...

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Format
        run: |
          cd api_sample
          base_dir=$(pwd)
          result=true
          for p in `find . -name go.mod | xargs dirname`; do
            cd $p;
            result_p=$(gofmt -l .)
            [ -z "${result_p}" ] || (echo "${result_p}" && result=false);
            cd $base_dir;
          done
          [ $result = true ] || exit 1

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.5"

      - name: Test
        run: |
          cd api_sample
          base_dir=$(pwd)
          result=true
          for p in `find . -name go.mod | xargs dirname`; do
            cd $p;
            go test -v;
            cd $base_dir;
          done
