// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/pdf/greet.proto

package pdf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PdfRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PdfRequest) Reset() {
	*x = PdfRequest{}
	mi := &file_proto_pdf_greet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdfRequest) ProtoMessage() {}

func (x *PdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_greet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdfRequest.ProtoReflect.Descriptor instead.
func (*PdfRequest) Descriptor() ([]byte, []int) {
	return file_proto_pdf_greet_proto_rawDescGZIP(), []int{0}
}

func (x *PdfRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type PdfChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PdfChunk) Reset() {
	*x = PdfChunk{}
	mi := &file_proto_pdf_greet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PdfChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdfChunk) ProtoMessage() {}

func (x *PdfChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_greet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdfChunk.ProtoReflect.Descriptor instead.
func (*PdfChunk) Descriptor() ([]byte, []int) {
	return file_proto_pdf_greet_proto_rawDescGZIP(), []int{1}
}

func (x *PdfChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_proto_pdf_greet_proto protoreflect.FileDescriptor

var file_proto_pdf_greet_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x64, 0x66, 0x2f, 0x67, 0x72, 0x65, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x64, 0x66, 0x22, 0x28, 0x0a, 0x0a,
	0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x08, 0x50, 0x64, 0x66, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0x38, 0x0a, 0x0a,
	0x50, 0x64, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x50, 0x64, 0x66, 0x12, 0x0f, 0x2e, 0x70, 0x64, 0x66, 0x2e, 0x50, 0x64, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x64, 0x66, 0x2e, 0x50, 0x64, 0x66, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x30, 0x01, 0x42, 0x1f, 0x5a, 0x1d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x61, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x64, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_pdf_greet_proto_rawDescOnce sync.Once
	file_proto_pdf_greet_proto_rawDescData []byte
)

func file_proto_pdf_greet_proto_rawDescGZIP() []byte {
	file_proto_pdf_greet_proto_rawDescOnce.Do(func() {
		file_proto_pdf_greet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pdf_greet_proto_rawDesc), len(file_proto_pdf_greet_proto_rawDesc)))
	})
	return file_proto_pdf_greet_proto_rawDescData
}

var file_proto_pdf_greet_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_pdf_greet_proto_goTypes = []any{
	(*PdfRequest)(nil), // 0: pdf.PdfRequest
	(*PdfChunk)(nil),   // 1: pdf.PdfChunk
}
var file_proto_pdf_greet_proto_depIdxs = []int32{
	0, // 0: pdf.PdfService.GetPdf:input_type -> pdf.PdfRequest
	1, // 1: pdf.PdfService.GetPdf:output_type -> pdf.PdfChunk
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_pdf_greet_proto_init() }
func file_proto_pdf_greet_proto_init() {
	if File_proto_pdf_greet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pdf_greet_proto_rawDesc), len(file_proto_pdf_greet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pdf_greet_proto_goTypes,
		DependencyIndexes: file_proto_pdf_greet_proto_depIdxs,
		MessageInfos:      file_proto_pdf_greet_proto_msgTypes,
	}.Build()
	File_proto_pdf_greet_proto = out.File
	file_proto_pdf_greet_proto_goTypes = nil
	file_proto_pdf_greet_proto_depIdxs = nil
}
